name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]
  issue_comment:
    types: [created]
  issues:
    types: [opened, assigned, labeled]

permissions:
  contents: write
  pull-requests: write
  issues: write
  id-token: write  # OIDC 토큰을 위해 필요

jobs:
  claude-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Claude Code Review
        uses: anthropics/claude-code-action@v1
        with:
          # Claude Code OAuth 토큰 사용 (Max 플랜)
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          
          # 트리거 문구 설정 (기본값: @claude)
          trigger_phrase: "@claude"
          
          # PR에 대한 자동 리뷰 프롬프트
          prompt: |
            이 PR의 변경사항을 검토하고 다음 사항에 대해 한국어로 상세한 리뷰를 제공해주세요:
            
            1. 코드 품질 및 베스트 프랙티스
            2. 잠재적 버그나 오류
            3. 보안 취약점
            4. 성능 최적화 기회
            5. 코드 가독성 및 유지보수성
            6. 테스트 커버리지
            
            각 파일의 변경사항에 대해 구체적인 피드백을 제공하고,
            개선 사항이 있다면 코드 예시와 함께 제안해주세요.
          
          # Claude CLI 추가 인자
          claude_args: |
            --max-turns 10
            --model claude-3-5-sonnet-20241022
          
          # PR 코멘트를 하나의 스티키 코멘트로 통합
          use_sticky_comment: true
          
          # 브랜치 설정
          base_branch: main
          branch_prefix: claude/
          
          # 이슈 할당자 트리거
          assignee_trigger: claude
          
          # 이슈 라벨 트리거  
          label_trigger: claude-help

      - name: Post Review Summary
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const summary = `
            ## 🤖 Claude Code Review 완료
            
            리뷰가 완료되었습니다. PR 코멘트를 확인해주세요.
            
            ### 리뷰 포인트
            - 코드 품질 및 베스트 프랙티스
            - 보안 취약점 검사
            - 성능 최적화 제안
            - 버그 가능성 검토
            `;
            
            if (context.eventName === 'pull_request') {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: context.issue.number,
                body: summary
              });
            }

  # 특정 라벨이 붙은 이슈에 대한 자동 응답
  claude-assist:
    if: github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'claude-help')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Claude Assistance
        uses: anthropics/claude-code-action@main
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          model: claude-3-5-sonnet-20241022
          respond_to_issues: true
          custom_instructions: |
            이슈를 분석하고 다음을 제공해주세요:
            1. 문제 해결 방안
            2. 구현 예시 코드
            3. 관련 문서 또는 리소스
            
            PLAYAUTO 프로젝트의 구조와 기술 스택을 고려하여 답변해주세요.
            모든 답변은 한글로 작성해주세요.